% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codelists.R
\name{create_var_from_codelist}
\alias{create_var_from_codelist}
\title{Create Variable from Codelist}
\usage{
create_var_from_codelist(
  data,
  metacore,
  dataset = NULL,
  input_var,
  out_var,
  decode_to_code = TRUE,
  create_from_out_var = TRUE,
  strict = FALSE
)
}
\arguments{
\item{data}{Dataset that contains the input variable}

\item{metacore}{A metacore object to get the codelist from. If the \code{out_var}
has different codelists for different datasets the metacore object will
need to be subsetted using \code{select_dataset} from the metacore package.}

\item{dataset}{Specify the parent dataset of the parameter to be created.}

\item{input_var}{Name of the variable that will be translated for the new
column}

\item{out_var}{Name of the output variable. Note: the grouping will always be
from the code of the codelist associates with \code{out_var}}

\item{decode_to_code}{Direction of the translation. By default assumes the
\code{input_var} is the decode column of the codelist. Set to \code{FALSE} if the
\code{input_var} is the code column of the codelist}

\item{create_from_out_var}{Specifies the variable from which the codelist
should be taken. By default is out_var.}

\item{strict}{A logical value indiciating whether to perform strict checking
against the codelist. If \code{TRUE} will issue a warning if values in the \code{input_var}
column are not present in the codelist. If \code{FALSE} no warning is issued and
values not present in the codelist will likely result in \code{NA} results.}
}
\value{
Dataset with a new column added
}
\description{
This functions uses code/decode pairs from a metacore object to create new
variables in the data
}
\examples{
library(metacore)
library(tibble)
data <- tribble(
  ~USUBJID, ~VAR1, ~VAR2,
  1, "M", "Male",
  2, "F", "Female",
  3, "F", "Female",
  4, "U", "Unknown",
  5, "M", "Male",
)
spec <- spec_to_metacore(metacore_example("p21_mock.xlsx"), quiet = TRUE)
create_var_from_codelist(data, spec, VAR2, SEX)
create_var_from_codelist(data, spec, "VAR2", "SEX")
create_var_from_codelist(data, spec, VAR1, SEX, decode_to_code = FALSE)
}
